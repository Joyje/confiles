#!/bin/bash
# _     _____   ____               ____                                          _     
#| |   |  ___| |  _ \ _   _ _ __  / ___|___  _ __ ___  _ __ ___   __ _ _ __   __| |___ 
#| |   | |_    | |_) | | | | '_ \| |   / _ \| '_ ` _ \| '_ ` _ \ / _` | '_ \ / _` / __|
#| |___|  _|   |  _ <| |_| | | | | |__| (_) | | | | | | | | | | | (_| | | | | (_| \__ \
#|_____|_|     |_| \_\\__,_|_| |_|\____\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|\__,_|___/
##########################################################################################
##########################################################################################
# ____       _   _   _                 
#/ ___|  ___| |_| |_(_)_ __   __ _ ___ 
#\___ \ / _ \ __| __| | '_ \ / _` / __|
# ___) |  __/ |_| |_| | | | | (_| \__ \
#|____/ \___|\__|\__|_|_| |_|\__, |___/
#                            |___/     
cmd on-start &{{
	rclone mount GoogleDrive: ~/rclone/GoogleDrive/ --tpslimit 10
}}
on-start
cmd on-cd &{{
    printf "\033]0; $PWD\007" > /dev/tty
}}
on-cd
set shell bash
set filesep " "
set number 'true'
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

##########################################################################################
# __  __                 ___   ____       _           _   
#|  \/  | _____   _____ ( _ ) / ___|  ___| | ___  ___| |_ 
#| |\/| |/ _ \ \ / / _ \/ _ \/\___ \ / _ \ |/ _ \/ __| __|
#| |  | | (_) \ V /  __/ (_>  <___) |  __/ |  __/ (__| |_ 
#|_|  |_|\___/ \_/ \___|\___/\/____/ \___|_|\___|\___|\__|
#
cmd copy-path ${{
    printf "Select path: "
    read -e spath
    lf -remote "send $id toggle $spath"
    lf -remote "send $id copy"
}}
cmd move-path ${{
    printf "Select path: "
    read -e spath
    lf -remote "send $id toggle $spath"
    lf -remote "send $id cut"
}}
cmd cut-all %{{
    if [ "$lf_hidden" = "false" ]; then
        ls | sed "s;^;$PWD/;"
    else
        ls -A | sed "s;^;$PWD/;"
    fi |
    sed "1imove" > ~/.local/share/lf/files
    lf -remote "send $id sync"
}}
cmd copy-all %{{
    if [ "$lf_hidden" = "false" ]; then
        ls | sed "s;^;$PWD/;"
    else
        ls -A | sed "s;^;$PWD/;"
    fi |
    sed "1icopy" > ~/.local/share/lf/files
    lf -remote "send $id sync"
}}
cmd select-files ${{
    if [ "$lf_hidden" = "false" ]; then
        ls -F | grep -v / | sed "s;^;$PWD/;"
    else
        ls -FA | grep -v / | sed "s;^;$PWD/;"
    fi |
    xargs -d '\n' -r -I{} lf -remote "send $id toggle {}"
}}
cmd select-type %{{
    if [ "$lf_hidden" = "false" ]; then fdfind -L -d 1 -t d
    else fdfind -HL -d 1 -t d
    fi | sed '/^$/d' | sort | uniq -u |
    xargs -d '\n' -r -I{} lf -remote "send $id toggle {}"
}}
#cmd newtypestart select $latestdir
#cmd newtypeend select $latestdir

##########################################################################################
# __  __       _         ___   ____       _      _       
#|  \/  | __ _| | _____ ( _ ) |  _ \  ___| | ___| |_ ___ 
#| |\/| |/ _` | |/ / _ \/ _ \/\ | | |/ _ \ |/ _ \ __/ _ \
#| |  | | (_| |   <  __/ (_>  < |_| |  __/ |  __/ ||  __/
#|_|  |_|\__,_|_|\_\___|\___/\/____/ \___|_|\___|\__\___|
#
cmd mkparentdir %{{
    printf "Name New Parent Directory: "
    read latestdir
    if [ $lf_count -gt 1 ]; then
        for dir in ${latestdir}; do
            mkdir -p $(seq -f "../${dir}%g" ${lf_count})
        done
    else
        mkdir -p ../${latestdir}
    fi
    #lf -remote "send $id cd ../${latestdir}"
}}
cmd mksubdir %{{
    printf "Name New Subdirectory: "
    read latestdir
    if [ $lf_count -gt 1 ]; then
        for dir in ${latestdir}; do
            mkdir -p $(seq -f "${dir}%g" ${lf_count})
        done
    else
        mkdir -p ${latestdir}
    fi
    #lf -remote "send $id cd ${latestdir}"
}}
cmd newfile %{{
    printf "Name new file(s): "
    read newfilename
    if [ $lf_count -gt 1 ]; then
        for file in ${newfilename}; do
            touch $(seq -f "${file}%g" ${lf_count})
        done
    else
        touch ${newfilename}
    fi
}}

##########################################################################################
# _____    _ _ _   ___   ____                                 
#| ____|__| (_) |_( _ ) |  _ \ ___ _ __   __ _ _ __ ___   ___ 
#|  _| / _` | | __/ _ \/\ |_) / _ \ '_ \ / _` | '_ ` _ \ / _ \
#| |__| (_| | | || (_>  <  _ <  __/ | | | (_| | | | | | |  __/
#|_____\__,_|_|\__\___/\/_| \_\___|_| |_|\__,_|_| |_| |_|\___|
#                                                             
cmd append %{{
    printf "Append to selected file(s): "
    read appendage
    if [ $lf_count -gt 1 ]; then
        for file in $fx; do
            for i in `seq $lf_count`; do
                echo ${appendage} >> ${file}
            done
        done
    else
        for file in $fx; do
            echo ${appendage} >> ${file}
        done
    fi
}}
cmd prepend %{{
    printf "Prepend to selected file(s): "
    read prependage
    if [ $lf_count -gt 1 ]; then
        for file in $fx; do
            for i in `seq $lf_count`; do
                sed -i "1i${prependage}" ${file}
            done
        done
    else
        for file in $fx; do
            sed -i "1i${prependage}" ${file}
        done
    fi
}}
cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit 
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$sdt" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

##########################################################################################
# _  __          __  __                   _             
#| |/ /___ _   _|  \/  | __ _ _ __  _ __ (_)_ __   __ _ 
#| ' // _ \ | | | |\/| |/ _` | '_ \| '_ \| | '_ \ / _` |
#| . \  __/ |_| | |  | | (_| | |_) | |_) | | | | | (_| |
#|_|\_\___|\__, |_|  |_|\__,_| .__/| .__/|_|_| |_|\__, |
#          |___/             |_|   |_|            |___/ 
map [
map ]
map ^ top
map <c-i> jump-next
map <c-o> jump-prev
map . set hidden!
map a append
map A newfile
map b jump-startprevioustype
map B jump-startprevioustype
map c
map cc
map cl
map c/
map d
map dd cut-all
map dl cut
map d/ move-path
map e jump-endnexttype
map E jump-endnexttype
map gg
map gg cd /
map gt cd
map G
map I ${{tmux send-keys -t 0:0.1 "cd $PWD && ls" Enter}}
map i prepend
map O mkparentdir
map o mksubdir
map s ${{tmux send-keys -t 0:0.2 Escape ":argd * | tabd | argadd" Enter ":argadd $fx | tab all" Enter}}
map u :{{
    clear
    unselect
}}
map w jump-startnexttype
map W jump-startnexttype
map x delete 
map y
map yy copy-all
map yl copy
map y/ copy-path
